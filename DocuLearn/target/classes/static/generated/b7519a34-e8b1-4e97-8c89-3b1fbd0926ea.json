{
  "summary": {
    "title": "**Chương 1: Nhập môn React Native**",
    "sections": [
      {
        "heading": "Phần 1: Giới thiệu",
        "content": "React Native là một framework Javascript dành để phát triển ứng dụng di động trên cả hai nền tảng iOS và Android. Thay vì sử dụng web component, React Native sử dụng các native component, giúp mã nguồn viết bằng React Native có thể được biên dịch thành native code. Điều này cho phép các ứng dụng phát triển bằng React Native có hiệu suất cao hơn và cộng đồng sử dụng lớn mạnh."
      },
      {
        "heading": "Phần 2: Ứng dụng đầu tiên",
        "content": "Để bắt đầu với React Native, người dùng cần cài đặt NodeJS và công cụ tạo project. Quá trình cài đặt bao gồm các bước thực thi lệnh như `npx expo start` và có thể chạy ứng dụng trên expo client bằng cách quét mã QR. Đối với việc chạy ứng dụng trên máy giả lập Android, cần cài đặt Android Studio và tạo AVD."
      },
      {
        "heading": "Phần 3: Debugging",
        "content": "Debugging trong React Native có thể thực hiện dễ dàng với các lệnh đơn giản trên cả Android và iOS. Trên Android, dùng tổ hợp phím Command + M, trong khi trên iOS dùng Command + D để mở các công cụ debugging."
      },
      {
        "heading": "Phần 4: Props",
        "content": "Props là các đối số truyền vào component, đóng vai trò như các thuộc tính không thay đổi được trong component con. Khi dùng constructor trong component, props cần được truyền qua phương thức super để sử dụng."
      },
      {
        "heading": "Phần 5: State",
        "content": "State trong React Native là đối tượng lưu giá trị các thuộc tính của component. State có thể thay đổi bất cứ khi nào bằng phương thức `this.setState()`, và khi state thay đổi, component sẽ tự động nạp lại. Truy cập state bằng cách gọi `this.state.propertyName`."
      },
      {
        "heading": "Phần 6: Vòng đời React Component",
        "content": "React Component có 3 giai đoạn chính trong vòng đời: Mounting (khi component được đặt vào DOM), Updating (khi có thay đổi trong props hoặc state), và Unmounting (khi component được gỡ khỏi DOM)."
      }
    ]
  },
  "multipleChoice": [
    {
      "question": "1. React Native là framework dành cho:",
      "options": [
        "Web",
        "Desktop",
        "Ứng dụng di động",
        "IoT"
      ]
    },
    {
      "question": "2. Để tạo ứng dụng React Native đầu tiên, lệnh nào được sử dụng?",
      "options": [
        "npm start",
        "npx create-react-app",
        "npx expo start",
        "npm init"
      ]
    },
    {
      "question": "3. Props trong React Native có thể:",
      "options": [
        "Thay đổi giá trị trong component con",
        "Chỉ đọc và không thay đổi",
        "Tạo mới các component",
        "Thay đổi cấu trúc component"
      ]
    },
    {
      "question": "4. Đối tượng state trong React Native có thể:",
      "options": [
        "Chỉ đọc",
        "Thay đổi thông qua `this.setState()`",
        "Tạo mới component",
        "Không thể thay đổi"
      ]
    },
    {
      "question": "5. Giai đoạn nào không thuộc vòng đời React Component?",
      "options": [
        "Mounting",
        "Updating",
        "Rendering",
        "Unmounting"
      ]
    }
  ],
  "essayQuestions": [
    "🖋️ Câu hỏi tự luận:",
    "1. Phân tích vai trò của Props và State trong React Native và cách chúng ảnh hưởng đến việc phát triển ứng dụng di động.",
    "2. Trình bày và phân tích các giai đoạn trong vòng đời của một React Component, nêu rõ ý nghĩa của từng giai đoạn đó."
  ]
}